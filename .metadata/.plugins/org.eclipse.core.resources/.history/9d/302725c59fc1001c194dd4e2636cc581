package com.nttdata.client.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.nttdata.client.model.Client;
import com.nttdata.client.model.ClientType;
import com.nttdata.client.service.IClientService;
import com.nttdata.client.service.IClientTypeService;

import reactor.core.publisher.Flux;
import reactor.core.publisher.Mono;

@RestController
@RequestMapping("/api/client")
public class ClientController {
	
	@Autowired
	private IClientService iClientService;
	
	@Autowired
	private IClientTypeService iClientTypeService;

	
	@DeleteMapping
	public ResponseEntity<Mono<Void>> deleteClient(@RequestBody Client client){
		
		return new ResponseEntity<Mono<Void>>(iClientService.deleteClient(client), HttpStatus.OK);
	}
	
	@GetMapping("/list")
	public ResponseEntity<Flux<Client>> listClient(){
		
		return new ResponseEntity<Flux<Client>>(iClientService.getClients(),HttpStatus.OK);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<Mono<Client>> findByIdClient(@PathVariable String id){
		return new ResponseEntity<Mono<Client>>(iClientService.getClientById(id),HttpStatus.OK);
	}
	
	
	@PutMapping("/update")
	public ResponseEntity<Mono<Client>> updateCustomer(@RequestBody Client client){
		return new ResponseEntity<Mono<Client>>(iClientService.updateClient(client),HttpStatus.OK);
	}

	
	@PostMapping("/save")
	public ResponseEntity<Mono<Client>> saveCustomer(@RequestBody Client client){
		return new ResponseEntity<Mono<Client>>(iClientService.create(client), HttpStatus.CREATED);
				
	}
	
	
	
	@GetMapping("/name/{name}")
	public ResponseEntity<Mono<Client>> findClientByName(@PathVariable String name){
		return new ResponseEntity<Mono<Client>>(iClientService.getClientByName(name),HttpStatus.OK);
		
	}
	
}
